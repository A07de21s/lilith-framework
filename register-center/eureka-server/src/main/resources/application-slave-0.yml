server:
  port: 7001
eureka:
  server:
    wait-time-in-ms-when-sync-empty: 0   # 在 eureka 服务器获取不到集群里对等服务器上的实例时，需要等待的时间，单机默认 0
    shouldUseReadOnlyResponseCache: true # eureka 是 CAP 理论种基于 AP 策略，为了保证强一致性关闭此切换 CP 默认不关闭 false 关闭
    enable-self-preservation: false    # 关闭服务器自我保护，客户端心跳检测 15 分钟内错误达到 80% 服务会保护，导致别人还认为是好用的服务
    eviction-interval-timer-in-ms: 60000 # 清理间隔（单位毫秒，默认是 60*1000）5 秒将客户端剔除的服务在服务注册列表中剔除
    response-cache-update-interval-ms: 3000  # eureka server 刷新 readCacheMap 的时间，注意，client 读取的是 readCacheMap，这个时间决定了多久会把 readWriteCacheMap 的缓存更新到 readCacheMap 上 默认 30s
    response-cache-auto-expiration-in-seconds: 180   # eureka server 缓存 readWriteCacheMap 失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从 registry 重新读取注册服务信息，registry 是一个 ConcurrentHashMap。
    renewal-percent-threshold: 0.49  # 指定每分钟需要收到的续约次数的阈值，默认值就是：0.85
  instance:
    refer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 10    # 续约更新时间间隔（默认30秒），eureka 客户端向服务端发送心跳的时间间隔
    lease-expiration-duration-in-seconds: 30 # 续约到期时间（默认90秒）
    hostname: 127.0.0.1
  client:
    register-with-eureka: true  # 是否将自身的实例信息注册到 eureka 服务器, false 不作为一个客户端注册到注册中心,
    fetch-registry: false      # 是否从 eureka 服务端获取注册信息，消费者需要配置 true, 为 true 时，可以启动，但报异常：Cannot execute request on any known server ，
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 30  # 从 eureka 服务端获取注册信息的间隔时间
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
ribbon:
  ServerListRefreshInterval: 1000    # 刷新服务列表源的间隔时间
spring:
  application:
    name: eureka